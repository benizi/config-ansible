- name: Dotfiles
  hosts: 'laptops:vps'
  vars:
    dotfiles: '{{homedir}}/dotfiles'
  tasks:
    - name: Directories
      file: state=directory dest={{homedir}}/{{item}}
      with_items:
        - bin.local
        - .cache
        - .config
        - git
        - .lein
        - .urxvt
        - .vim.local
        - .zsh.local

    - name: Clone dotfiles
      git:
        repo: https://github.com/benizi/dotfiles
        dest: '{{dotfiles}}'
        update: yes
        force: no
        remote: benizi

    # TODO: (1/4) set up symlinks using script in the dotfiles repo itself
    - name: Link dotfiles (simple)
      file: state=link src=dotfiles/{{item}} dest={{homedir}}/{{item}}
      with_items:
        - bin
        - .emacs.d
        - .gitattributes.global
        - .gitconfig
        - .gitignore.global
        - perl-lib
        - .pg
        - .psqlrc
        - .python
        - .terminfo
        - .tmux.conf
        - .Xdefaults
        - .xmonad
        - .xsession

    # TODO: (2/4)
    - name: Link dotfiles (non-homedir)
      file: state=link src={{item.src}} dest={{homedir}}/{{item.dest}}
      with_items:
        - { src: ../dotfiles/.config/feh, dest: .config/feh }
        - { src: ../dotfiles/.lein/profiles.clj, dest: .lein/profiles.clj }
        - { src: ../dotfiles/.urxvt, dest: .urxvt/ext }
        - { src: dotfiles/.vim/vimrc, dest: .vimrc }
        - { src: dotfiles/.zsh/.zshenv, dest: .zshenv }

    # TODO: (3/4)
    - name: Link dotfiles (mount helpers)
      file:
        state: link
        src: '{{dotfiles}}/bin/{{item.src}}'
        dest: '/usr/local/bin/{{item.dest}}'
      with_items:
        - { src: google-drive-ocamlfuse-helper, dest: google-drive }
        - { src: go-mtpfs-helper, dest: mtpfs }

    # TODO: (4/4)
    - name: Link dotfiles (system-wide)
      file: state=link src={{dotfiles}}{{item}} dest={{item}}
      with_items:
        - /etc/udev/rules.d/90-external-keyboard.rules

    - name: Root zsh
      become: true
      file: state=link src={{homedir}}/.zshenv dest=~root/.zshenv

    - name: Set up build for bin.local files
      file: state=link src=../bin/{{item}} dest={{homedir}}/bin.local/{{item}}
      with_items:
        - Makefile
        - src

    - name: Set shell
      become: true
      user: name=bhaskell shell=/bin/zsh
      when: inventory_hostname not in groups.osx

    - name: Script prereqs
      become: true
      pacman: name={{item}}
      with_items:
        - inotify-tools
        - perl-algorithm-diff
        - perl-cgi
        - perl-date-manip
        - perl-fuse
        - perl-ipc-run
        - perl-json
        - perl-tk
        - perl-xml-twig
      when: ansible_pkg_mgr == 'pacman'

    - name: Script prereqs (compiled)
      command: make {{item}}
        chdir={{homedir}}/bin.local
        creates={{item}}
      with_items:
        - myod
        - x-is-active
      when: inventory_hostname not in groups.osx
